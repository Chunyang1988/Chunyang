{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/anatole/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/blog_basic.css","path":"css/blog_basic.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/favicon1.png","path":"images/favicon1.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/logo@2x.png","path":"images/logo@2x.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery.appear.js","path":"js/jquery.appear.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","path":"js/jquery-migrate-1.2.1.min.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"571b4e76e240ce4a441ed98c7e836751c29c9c2f","modified":1501945320000},{"_id":"themes/anatole/.gitignore","hash":"9fcbb05b158b5d3ba1ee60d38889e05e8b0f3f2a","modified":1494448682000},{"_id":"themes/anatole/LICENSE","hash":"359cb81298c1fdbccf531548fc097466b0151be4","modified":1494448682000},{"_id":"themes/anatole/_config.yml","hash":"811d05e16ea84225138703ce22c3905bc9ba6ba4","modified":1501993220000},{"_id":"themes/anatole/package.json","hash":"cf731a3ebf3913747fccb6c4c6615eba7d7e88a4","modified":1494448682000},{"_id":"themes/anatole/README.md","hash":"75a3829b8a316249ec0b4fd8eae2d371de879494","modified":1494448682000},{"_id":"source/CNAME","hash":"9179a02edf493c0e5c84c1f1977ca05604cebc45","modified":1502113571000},{"_id":"themes/anatole/.DS_Store","hash":"61d4653525ee800306d888d998f91174144e6d64","modified":1501991860000},{"_id":"source/_posts/Blog.md","hash":"d4582e28474e1d6ac46c1378306ebba04ff6f1cc","modified":1502113873000},{"_id":"source/_posts/.DS_Store","hash":"911954771c389a582974cf4dfa8313120c7ce5ad","modified":1501862645000},{"_id":"source/_posts/CoolShell.md","hash":"9616854169a33a0863015d162dd2fa7b58209f8b","modified":1501988882000},{"_id":"source/_posts/Gradlew.md","hash":"9be6a4ac5b8d91fa3ecb47ef4f6e4c6188d3340b","modified":1502113879000},{"_id":"themes/anatole/layout/archive.jade","hash":"1a161404966000b25a84762f08da3ca60af146bc","modified":1494448682000},{"_id":"source/about/index.md","hash":"7bf12143f0085325e13047030f6918c89c328ac5","modified":1501772654000},{"_id":"themes/anatole/layout/category.jade","hash":"ae894ef4baee4a0c7c8e66641166061e789f1fa7","modified":1494448682000},{"_id":"themes/anatole/layout/index.jade","hash":"53da3cfd498951148acb33de1574df80ae282dc5","modified":1494448682000},{"_id":"themes/anatole/layout/page.jade","hash":"15142c94e5c2247aba8efb64cffd695b3f133670","modified":1494448682000},{"_id":"themes/anatole/layout/mixins.jade","hash":"107bfd2fe10de0d8b110c13bb1168af79e62a37c","modified":1494448682000},{"_id":"themes/anatole/languages/zh-cn.yml","hash":"dab1823e036f4adb3b7ae9efe95a37a15e47bec2","modified":1501992874000},{"_id":"themes/anatole/layout/.DS_Store","hash":"d3045da728744b4be41a94d94b4691d07437f39b","modified":1501992486000},{"_id":"themes/anatole/layout/post.jade","hash":"2f2b91b98d8f72d105211cdbf312d44ea3b1b145","modified":1494448682000},{"_id":"themes/anatole/layout/tag.jade","hash":"7017a8bae4f4a412dafb556772bdcf2cfddeb79f","modified":1494448682000},{"_id":"themes/anatole/source/.DS_Store","hash":"e2c3c05cf7934a2fedbe36472a1aa1c1fc189998","modified":1501991879000},{"_id":"themes/anatole/layout/partial/footer.jade","hash":"772f03a2dd9fa4fed422c4eb4d5d1ace84c65580","modified":1501993944000},{"_id":"themes/anatole/layout/partial/head.jade","hash":"3d6126d0b53a889a46ad61eb8cc0ab1b35446c49","modified":1494448682000},{"_id":"themes/anatole/layout/partial/comments.jade","hash":"6d749e695e30ecfc0a2de2b443fd361f5f2a5cff","modified":1494448682000},{"_id":"themes/anatole/layout/partial/layout.jade","hash":"174050fa9ee919f5bcb2c5426224ec1968db672c","modified":1494448682000},{"_id":"themes/anatole/layout/partial/sidebar.jade","hash":"6721b1e0b1e59e54d031a4978e7f82aece336efc","modified":1494448682000},{"_id":"themes/anatole/layout/partial/nav.jade","hash":"17c619c7998a7bd16965314bc94e4297e32f91d5","modified":1501993785000},{"_id":"themes/anatole/source/css/style.scss","hash":"cbcf76f0eabd93869abc424cc1c0a36ceb7246f5","modified":1502008180000},{"_id":"themes/anatole/source/css/blog_basic.css","hash":"7db88f0873e858b21a4c981c8481708ad9117478","modified":1494448682000},{"_id":"themes/anatole/source/css/style.css","hash":"c12591d7058bea8081063422bf12a3fb597f60dd","modified":1502008142000},{"_id":"themes/anatole/source/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1494448682000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1494448682000},{"_id":"themes/anatole/source/images/favicon.png","hash":"41bdf2ebd8cc193ad82a211758af827d891b1a90","modified":1494448682000},{"_id":"themes/anatole/source/images/favicon1.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1494448682000},{"_id":"themes/anatole/source/images/logo.png","hash":"41bdf2ebd8cc193ad82a211758af827d891b1a90","modified":1494448682000},{"_id":"themes/anatole/source/images/logo@2x.png","hash":"49c3fa97724abf53861bf11356ea9ba5bcb11576","modified":1494448682000},{"_id":"themes/anatole/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1501992478000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1494448682000},{"_id":"themes/anatole/source/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1494448682000},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1494448682000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1494448682000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1494448682000},{"_id":"themes/anatole/source/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1494448682000},{"_id":"public/about/index.html","hash":"95b905514bd2528e11e185689d00045446eb5df5","modified":1502114355160},{"_id":"public/2017/08/06/Gradlew/index.html","hash":"84671c599327ea2ec73aca535c1874f4c41a6e88","modified":1502114355160},{"_id":"public/2017/08/03/CoolShell/index.html","hash":"ad81dc59fe7d3ea457cecdf76ee43ce510ce2411","modified":1502114355161},{"_id":"public/2017/08/01/Blog/index.html","hash":"148f2cdf00c6f8f18fbce47e31e75ccaf309e9e7","modified":1502114355161},{"_id":"public/archives/index.html","hash":"8c4a453a88b031ccbd7e69d9efdfb58f1681f9ac","modified":1502114355161},{"_id":"public/archives/2017/index.html","hash":"8c4a453a88b031ccbd7e69d9efdfb58f1681f9ac","modified":1502114355161},{"_id":"public/archives/2017/08/index.html","hash":"8c4a453a88b031ccbd7e69d9efdfb58f1681f9ac","modified":1502114355161},{"_id":"public/categories/Tools/index.html","hash":"cd67c8cdfccaa34601962bb713d753b356cc5924","modified":1502114355161},{"_id":"public/categories/Android/index.html","hash":"4afee7f7eae956774b6f5476b1026c2dd99eee5c","modified":1502114355162},{"_id":"public/index.html","hash":"7bcda88807af73921a26df49d508a5e85cb38ec0","modified":1502114355162},{"_id":"public/tags/Hexo/index.html","hash":"f7dab1005248f460951b4e5001d5f96dcc324fff","modified":1502114355162},{"_id":"public/tags/Shell/index.html","hash":"8f3664e2643e0b71166de59c8cb3963312b564dc","modified":1502114355163},{"_id":"public/tags/Android/index.html","hash":"da3013d5e3fef7910ed7d515dfa0cb8369729f45","modified":1502114355163},{"_id":"public/CNAME","hash":"9179a02edf493c0e5c84c1f1977ca05604cebc45","modified":1502114355166},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1502114355166},{"_id":"public/images/favicon.png","hash":"41bdf2ebd8cc193ad82a211758af827d891b1a90","modified":1502114355166},{"_id":"public/images/favicon1.png","hash":"d659236704308954da9d64b101c4f54cc3f3255c","modified":1502114355167},{"_id":"public/images/logo.png","hash":"41bdf2ebd8cc193ad82a211758af827d891b1a90","modified":1502114355167},{"_id":"public/images/logo@2x.png","hash":"49c3fa97724abf53861bf11356ea9ba5bcb11576","modified":1502114355167},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1502114355167},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1502114355169},{"_id":"public/css/style.css","hash":"c12591d7058bea8081063422bf12a3fb597f60dd","modified":1502114355172},{"_id":"public/css/blog_basic.css","hash":"7db88f0873e858b21a4c981c8481708ad9117478","modified":1502114355172},{"_id":"public/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1502114355173},{"_id":"public/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1502114355173},{"_id":"public/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1502114355173},{"_id":"public/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1502114355173},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1502114355175}],"Category":[{"name":"Tools","_id":"cj6283pm50004otaie5h8mzcm"},{"name":"Android","_id":"cj6283pm90007otaithyd1jcq"}],"Data":[],"Page":[{"title":"关于","type":"about","comments":0,"_content":"\n<h3 id=\"toc_0\">chunyang1988，一个98年出生的小伙</h3>\n\n<ul>\n<li>只是想弄一个博客，写写日记，写写技术而已</li>\n<li>让自己有件事情做，不停的思考与进步</li>\n<li>没有太多功底，一步一步开始学习</li>\n<li>不想说太多，希望能够进步</li>\n<li>一切皆有可能</li>\n<li>相信自己</li>\n</ul>\n\n\n\n","source":"about/index.md","raw":"title: 关于\ntype: \"about\"\ncomments: false\n---\n\n<h3 id=\"toc_0\">chunyang1988，一个98年出生的小伙</h3>\n\n<ul>\n<li>只是想弄一个博客，写写日记，写写技术而已</li>\n<li>让自己有件事情做，不停的思考与进步</li>\n<li>没有太多功底，一步一步开始学习</li>\n<li>不想说太多，希望能够进步</li>\n<li>一切皆有可能</li>\n<li>相信自己</li>\n</ul>\n\n\n\n","date":"2017-08-03T15:04:14.000Z","updated":"2017-08-03T15:04:14.000Z","path":"about/index.html","layout":"page","_id":"cj6283q2r000dotai25gcqa1d","content":"<h3 id=\"toc_0\">chunyang1988，一个98年出生的小伙</h3>\n\n<ul><br><li>只是想弄一个博客，写写日记，写写技术而已</li><br><li>让自己有件事情做，不停的思考与进步</li><br><li>没有太多功底，一步一步开始学习</li><br><li>不想说太多，希望能够进步</li><br><li>一切皆有可能</li><br><li>相信自己</li><br></ul>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"toc_0\">chunyang1988，一个98年出生的小伙</h3>\n\n<ul><br><li>只是想弄一个博客，写写日记，写写技术而已</li><br><li>让自己有件事情做，不停的思考与进步</li><br><li>没有太多功底，一步一步开始学习</li><br><li>不想说太多，希望能够进步</li><br><li>一切皆有可能</li><br><li>相信自己</li><br></ul>\n\n\n\n"}],"Post":[{"title":"搭建个人博客","date":"2017-08-01T08:46:50.000Z","_content":"\n此文讲解的搭建个人博客是通过[GitHub Pages](https://pages.github.com/) + [Hexo](https://hexo.io/zh-cn/)进行搭建。\n\n## 1.安装Hexo\n\n安装前需要需要确定是否安装[Node.js](https://nodejs.org/en/)以及[Git](https://git-scm.com/)，在此文我会重头一步一步安装操作。\n\n#### a.安装 Homebrew\nHomebrew是 macOS 缺失的软件包管理器，具体哪些好处问什么要安装还是自行搜索吧。\n\n安装只需要在终端中输入:\n\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n安装成功后，直接就可以使用brew进行安装Node以及Git了，当然可以安装的还有很多东西，就不列举了。\n\n#### b.安装Node\n\n官网安装Node也可以，但是此文讲解的是通过brew进行安装，大家一起看看Homebrew的优点。\n\n同样只需要在终端中输入:\n\n```\nbrew install node\n```\n\n\n#### c.安装Git\n\n此处就不多说了直接上代码:\n\n```\nbrew install git\n```\n\n#### d.安装Hexo\n至此准备工作都已经完成可以，开始安装Hex代码如下：\n\n```\n npm install -g hexo-cli\n```\n    \n## 2.建站\n\n初步环境都已经完成，剩下的就是建站了，运行一下命令即可完成建站操作。\n\n```\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n并不一定非要按照上述代码去写，也可以这样写\n\n```\nmkdir <folder>\ncd <folder>\nhexo init\nnpm install\n```\n例如：\n\n```\nmkdir Blogs\ncd Blogs\nhexo init \nnpm install\n```\n\n完成后目录结构如下\n\n```\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n具体什么意思，这里面就不废话了，可以看[官网\n](https://hexo.io/zh-cn/docs/setup.html)\n\n## 3.简单写作\n\n此处不会过度介绍，详情还是去看官网，在这里面只是简单介绍几种常用命令。\n\n#### a.新建文章\n\n```\nhexo new [layout] <title>\n```\n其中`[layout]`有三种默认布局：`post`、`page`、`draft`，分别对应不同路径。\n\n| 布局 | 路径 |\n| --- | --- |\n| post | source/_posts |\n| page | source |\n| draft | source/_drafts |\n\n例如：\n\n```\nhexo new blogs\n```\n\n#### b.更改主题\n\n使用maupassant主题为介绍\n\n```\ngit clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant\nnpm install hexo-renderer-jade@0.3.0 --save\nnpm install hexo-renderer-sass --save\n```\n将主题下载到指定目录，更改配置文件`_config.ym`里面的theme\n\n```\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: maupassant\n```\n每个主题安装方式不一样，具体的说明看官网更加详细。\n\n## 4.部署\n#### a.创建Github Pages\n\n这里面不多说，主要是创建一个yourName.github.io仓库\n\n#### b.部署Hexo到Github\n\n这里面主要介绍使用hexo deploy部署到git上面\n\n在配置文件`_config.yml`中配置deploy\n\n```\ndeploy:\n  type: git\n  repo: git@github.com:yuserName/yuserName.github.io.git\n  branch: master\n```\n\n例如：\n\n```\ndeploy:\n  type: git\n  repo: git@github.com:Chunyang1988/chunyang1988.github.io.git\n  branch: master\n```\n\n之后一件部署\n\n```\nhexo deploy\n```\n#### c.添加SSH密钥\n\n生成密钥\n\n```\nssh-keygen -t rsa -C \"your_email@example.com\"\n```\n例如\n\n```\nssh-keygen -t rsa -C \"chunyang1988.cn@gmail.com\"\n```\n为了方便在后面提示信息中，直接按回车，一直回车下来。\n\n#### d.部署\n\n部署前还需要安装\n\n```\nnpm install hexo-deployer-git --save\n```\n\n一般现在本地写好文章，运行\n\n```\nhexo s\n```\n本地查看一下，如果可以，可以直接部署到git上面\n\n```\nhexo d\n```\n\n## 结束\n\n这时候你输入自己的xxx.github.io即可查看自己的博客了。\n\n","source":"_posts/Blog.md","raw":"---\ntitle: 搭建个人博客\ntags: [Hexo]\ncategories: \ndate: 2017-08-01 16:46:50\n---\n\n此文讲解的搭建个人博客是通过[GitHub Pages](https://pages.github.com/) + [Hexo](https://hexo.io/zh-cn/)进行搭建。\n\n## 1.安装Hexo\n\n安装前需要需要确定是否安装[Node.js](https://nodejs.org/en/)以及[Git](https://git-scm.com/)，在此文我会重头一步一步安装操作。\n\n#### a.安装 Homebrew\nHomebrew是 macOS 缺失的软件包管理器，具体哪些好处问什么要安装还是自行搜索吧。\n\n安装只需要在终端中输入:\n\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n安装成功后，直接就可以使用brew进行安装Node以及Git了，当然可以安装的还有很多东西，就不列举了。\n\n#### b.安装Node\n\n官网安装Node也可以，但是此文讲解的是通过brew进行安装，大家一起看看Homebrew的优点。\n\n同样只需要在终端中输入:\n\n```\nbrew install node\n```\n\n\n#### c.安装Git\n\n此处就不多说了直接上代码:\n\n```\nbrew install git\n```\n\n#### d.安装Hexo\n至此准备工作都已经完成可以，开始安装Hex代码如下：\n\n```\n npm install -g hexo-cli\n```\n    \n## 2.建站\n\n初步环境都已经完成，剩下的就是建站了，运行一下命令即可完成建站操作。\n\n```\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n并不一定非要按照上述代码去写，也可以这样写\n\n```\nmkdir <folder>\ncd <folder>\nhexo init\nnpm install\n```\n例如：\n\n```\nmkdir Blogs\ncd Blogs\nhexo init \nnpm install\n```\n\n完成后目录结构如下\n\n```\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n具体什么意思，这里面就不废话了，可以看[官网\n](https://hexo.io/zh-cn/docs/setup.html)\n\n## 3.简单写作\n\n此处不会过度介绍，详情还是去看官网，在这里面只是简单介绍几种常用命令。\n\n#### a.新建文章\n\n```\nhexo new [layout] <title>\n```\n其中`[layout]`有三种默认布局：`post`、`page`、`draft`，分别对应不同路径。\n\n| 布局 | 路径 |\n| --- | --- |\n| post | source/_posts |\n| page | source |\n| draft | source/_drafts |\n\n例如：\n\n```\nhexo new blogs\n```\n\n#### b.更改主题\n\n使用maupassant主题为介绍\n\n```\ngit clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant\nnpm install hexo-renderer-jade@0.3.0 --save\nnpm install hexo-renderer-sass --save\n```\n将主题下载到指定目录，更改配置文件`_config.ym`里面的theme\n\n```\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: maupassant\n```\n每个主题安装方式不一样，具体的说明看官网更加详细。\n\n## 4.部署\n#### a.创建Github Pages\n\n这里面不多说，主要是创建一个yourName.github.io仓库\n\n#### b.部署Hexo到Github\n\n这里面主要介绍使用hexo deploy部署到git上面\n\n在配置文件`_config.yml`中配置deploy\n\n```\ndeploy:\n  type: git\n  repo: git@github.com:yuserName/yuserName.github.io.git\n  branch: master\n```\n\n例如：\n\n```\ndeploy:\n  type: git\n  repo: git@github.com:Chunyang1988/chunyang1988.github.io.git\n  branch: master\n```\n\n之后一件部署\n\n```\nhexo deploy\n```\n#### c.添加SSH密钥\n\n生成密钥\n\n```\nssh-keygen -t rsa -C \"your_email@example.com\"\n```\n例如\n\n```\nssh-keygen -t rsa -C \"chunyang1988.cn@gmail.com\"\n```\n为了方便在后面提示信息中，直接按回车，一直回车下来。\n\n#### d.部署\n\n部署前还需要安装\n\n```\nnpm install hexo-deployer-git --save\n```\n\n一般现在本地写好文章，运行\n\n```\nhexo s\n```\n本地查看一下，如果可以，可以直接部署到git上面\n\n```\nhexo d\n```\n\n## 结束\n\n这时候你输入自己的xxx.github.io即可查看自己的博客了。\n\n","slug":"Blog","published":1,"updated":"2017-08-07T13:51:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6283plu0000otaikrlfrz6e","content":"<p>此文讲解的搭建个人博客是通过<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">GitHub Pages</a> + <a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">Hexo</a>进行搭建。</p>\n<h2 id=\"1-安装Hexo\"><a href=\"#1-安装Hexo\" class=\"headerlink\" title=\"1.安装Hexo\"></a>1.安装Hexo</h2><p>安装前需要需要确定是否安装<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a>以及<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"external\">Git</a>，在此文我会重头一步一步安装操作。</p>\n<h4 id=\"a-安装-Homebrew\"><a href=\"#a-安装-Homebrew\" class=\"headerlink\" title=\"a.安装 Homebrew\"></a>a.安装 Homebrew</h4><p>Homebrew是 macOS 缺失的软件包管理器，具体哪些好处问什么要安装还是自行搜索吧。</p>\n<p>安装只需要在终端中输入:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure>\n<p>安装成功后，直接就可以使用brew进行安装Node以及Git了，当然可以安装的还有很多东西，就不列举了。</p>\n<h4 id=\"b-安装Node\"><a href=\"#b-安装Node\" class=\"headerlink\" title=\"b.安装Node\"></a>b.安装Node</h4><p>官网安装Node也可以，但是此文讲解的是通过brew进行安装，大家一起看看Homebrew的优点。</p>\n<p>同样只需要在终端中输入:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install node</div></pre></td></tr></table></figure>\n<h4 id=\"c-安装Git\"><a href=\"#c-安装Git\" class=\"headerlink\" title=\"c.安装Git\"></a>c.安装Git</h4><p>此处就不多说了直接上代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install git</div></pre></td></tr></table></figure>\n<h4 id=\"d-安装Hexo\"><a href=\"#d-安装Hexo\" class=\"headerlink\" title=\"d.安装Hexo\"></a>d.安装Hexo</h4><p>至此准备工作都已经完成可以，开始安装Hex代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<h2 id=\"2-建站\"><a href=\"#2-建站\" class=\"headerlink\" title=\"2.建站\"></a>2.建站</h2><p>初步环境都已经完成，剩下的就是建站了，运行一下命令即可完成建站操作。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div><div class=\"line\">cd &lt;folder&gt;</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>并不一定非要按照上述代码去写，也可以这样写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir &lt;folder&gt;</div><div class=\"line\">cd &lt;folder&gt;</div><div class=\"line\">hexo init</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir Blogs</div><div class=\"line\">cd Blogs</div><div class=\"line\">hexo init </div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>完成后目录结构如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes</div></pre></td></tr></table></figure>\n<p>具体什么意思，这里面就不废话了，可以看<a href=\"https://hexo.io/zh-cn/docs/setup.html\" target=\"_blank\" rel=\"external\">官网\n</a></p>\n<h2 id=\"3-简单写作\"><a href=\"#3-简单写作\" class=\"headerlink\" title=\"3.简单写作\"></a>3.简单写作</h2><p>此处不会过度介绍，详情还是去看官网，在这里面只是简单介绍几种常用命令。</p>\n<h4 id=\"a-新建文章\"><a href=\"#a-新建文章\" class=\"headerlink\" title=\"a.新建文章\"></a>a.新建文章</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p>其中<code>[layout]</code>有三种默认布局：<code>post</code>、<code>page</code>、<code>draft</code>，分别对应不同路径。</p>\n<table>\n<thead>\n<tr>\n<th>布局</th>\n<th>路径</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post</td>\n<td>source/_posts</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_drafts</td>\n</tr>\n</tbody>\n</table>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new blogs</div></pre></td></tr></table></figure>\n<h4 id=\"b-更改主题\"><a href=\"#b-更改主题\" class=\"headerlink\" title=\"b.更改主题\"></a>b.更改主题</h4><p>使用maupassant主题为介绍</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</div><div class=\"line\">npm install hexo-renderer-jade@0.3.0 --save</div><div class=\"line\">npm install hexo-renderer-sass --save</div></pre></td></tr></table></figure>\n<p>将主题下载到指定目录，更改配置文件<code>_config.ym</code>里面的theme</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">theme: maupassant</div></pre></td></tr></table></figure>\n<p>每个主题安装方式不一样，具体的说明看官网更加详细。</p>\n<h2 id=\"4-部署\"><a href=\"#4-部署\" class=\"headerlink\" title=\"4.部署\"></a>4.部署</h2><h4 id=\"a-创建Github-Pages\"><a href=\"#a-创建Github-Pages\" class=\"headerlink\" title=\"a.创建Github Pages\"></a>a.创建Github Pages</h4><p>这里面不多说，主要是创建一个yourName.github.io仓库</p>\n<h4 id=\"b-部署Hexo到Github\"><a href=\"#b-部署Hexo到Github\" class=\"headerlink\" title=\"b.部署Hexo到Github\"></a>b.部署Hexo到Github</h4><p>这里面主要介绍使用hexo deploy部署到git上面</p>\n<p>在配置文件<code>_config.yml</code>中配置deploy</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:yuserName/yuserName.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:Chunyang1988/chunyang1988.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n<p>之后一件部署</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy</div></pre></td></tr></table></figure>\n<h4 id=\"c-添加SSH密钥\"><a href=\"#c-添加SSH密钥\" class=\"headerlink\" title=\"c.添加SSH密钥\"></a>c.添加SSH密钥</h4><p>生成密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</div></pre></td></tr></table></figure>\n<p>例如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C &quot;chunyang1988.cn@gmail.com&quot;</div></pre></td></tr></table></figure>\n<p>为了方便在后面提示信息中，直接按回车，一直回车下来。</p>\n<h4 id=\"d-部署\"><a href=\"#d-部署\" class=\"headerlink\" title=\"d.部署\"></a>d.部署</h4><p>部署前还需要安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>一般现在本地写好文章，运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo s</div></pre></td></tr></table></figure>\n<p>本地查看一下，如果可以，可以直接部署到git上面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo d</div></pre></td></tr></table></figure>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>这时候你输入自己的xxx.github.io即可查看自己的博客了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>此文讲解的搭建个人博客是通过<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">GitHub Pages</a> + <a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">Hexo</a>进行搭建。</p>\n<h2 id=\"1-安装Hexo\"><a href=\"#1-安装Hexo\" class=\"headerlink\" title=\"1.安装Hexo\"></a>1.安装Hexo</h2><p>安装前需要需要确定是否安装<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a>以及<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"external\">Git</a>，在此文我会重头一步一步安装操作。</p>\n<h4 id=\"a-安装-Homebrew\"><a href=\"#a-安装-Homebrew\" class=\"headerlink\" title=\"a.安装 Homebrew\"></a>a.安装 Homebrew</h4><p>Homebrew是 macOS 缺失的软件包管理器，具体哪些好处问什么要安装还是自行搜索吧。</p>\n<p>安装只需要在终端中输入:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure>\n<p>安装成功后，直接就可以使用brew进行安装Node以及Git了，当然可以安装的还有很多东西，就不列举了。</p>\n<h4 id=\"b-安装Node\"><a href=\"#b-安装Node\" class=\"headerlink\" title=\"b.安装Node\"></a>b.安装Node</h4><p>官网安装Node也可以，但是此文讲解的是通过brew进行安装，大家一起看看Homebrew的优点。</p>\n<p>同样只需要在终端中输入:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install node</div></pre></td></tr></table></figure>\n<h4 id=\"c-安装Git\"><a href=\"#c-安装Git\" class=\"headerlink\" title=\"c.安装Git\"></a>c.安装Git</h4><p>此处就不多说了直接上代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install git</div></pre></td></tr></table></figure>\n<h4 id=\"d-安装Hexo\"><a href=\"#d-安装Hexo\" class=\"headerlink\" title=\"d.安装Hexo\"></a>d.安装Hexo</h4><p>至此准备工作都已经完成可以，开始安装Hex代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<h2 id=\"2-建站\"><a href=\"#2-建站\" class=\"headerlink\" title=\"2.建站\"></a>2.建站</h2><p>初步环境都已经完成，剩下的就是建站了，运行一下命令即可完成建站操作。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div><div class=\"line\">cd &lt;folder&gt;</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>并不一定非要按照上述代码去写，也可以这样写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir &lt;folder&gt;</div><div class=\"line\">cd &lt;folder&gt;</div><div class=\"line\">hexo init</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir Blogs</div><div class=\"line\">cd Blogs</div><div class=\"line\">hexo init </div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>完成后目录结构如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes</div></pre></td></tr></table></figure>\n<p>具体什么意思，这里面就不废话了，可以看<a href=\"https://hexo.io/zh-cn/docs/setup.html\" target=\"_blank\" rel=\"external\">官网\n</a></p>\n<h2 id=\"3-简单写作\"><a href=\"#3-简单写作\" class=\"headerlink\" title=\"3.简单写作\"></a>3.简单写作</h2><p>此处不会过度介绍，详情还是去看官网，在这里面只是简单介绍几种常用命令。</p>\n<h4 id=\"a-新建文章\"><a href=\"#a-新建文章\" class=\"headerlink\" title=\"a.新建文章\"></a>a.新建文章</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p>其中<code>[layout]</code>有三种默认布局：<code>post</code>、<code>page</code>、<code>draft</code>，分别对应不同路径。</p>\n<table>\n<thead>\n<tr>\n<th>布局</th>\n<th>路径</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post</td>\n<td>source/_posts</td>\n</tr>\n<tr>\n<td>page</td>\n<td>source</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>source/_drafts</td>\n</tr>\n</tbody>\n</table>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new blogs</div></pre></td></tr></table></figure>\n<h4 id=\"b-更改主题\"><a href=\"#b-更改主题\" class=\"headerlink\" title=\"b.更改主题\"></a>b.更改主题</h4><p>使用maupassant主题为介绍</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</div><div class=\"line\">npm install hexo-renderer-jade@0.3.0 --save</div><div class=\"line\">npm install hexo-renderer-sass --save</div></pre></td></tr></table></figure>\n<p>将主题下载到指定目录，更改配置文件<code>_config.ym</code>里面的theme</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">theme: maupassant</div></pre></td></tr></table></figure>\n<p>每个主题安装方式不一样，具体的说明看官网更加详细。</p>\n<h2 id=\"4-部署\"><a href=\"#4-部署\" class=\"headerlink\" title=\"4.部署\"></a>4.部署</h2><h4 id=\"a-创建Github-Pages\"><a href=\"#a-创建Github-Pages\" class=\"headerlink\" title=\"a.创建Github Pages\"></a>a.创建Github Pages</h4><p>这里面不多说，主要是创建一个yourName.github.io仓库</p>\n<h4 id=\"b-部署Hexo到Github\"><a href=\"#b-部署Hexo到Github\" class=\"headerlink\" title=\"b.部署Hexo到Github\"></a>b.部署Hexo到Github</h4><p>这里面主要介绍使用hexo deploy部署到git上面</p>\n<p>在配置文件<code>_config.yml</code>中配置deploy</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:yuserName/yuserName.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:Chunyang1988/chunyang1988.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n<p>之后一件部署</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo deploy</div></pre></td></tr></table></figure>\n<h4 id=\"c-添加SSH密钥\"><a href=\"#c-添加SSH密钥\" class=\"headerlink\" title=\"c.添加SSH密钥\"></a>c.添加SSH密钥</h4><p>生成密钥</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</div></pre></td></tr></table></figure>\n<p>例如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C &quot;chunyang1988.cn@gmail.com&quot;</div></pre></td></tr></table></figure>\n<p>为了方便在后面提示信息中，直接按回车，一直回车下来。</p>\n<h4 id=\"d-部署\"><a href=\"#d-部署\" class=\"headerlink\" title=\"d.部署\"></a>d.部署</h4><p>部署前还需要安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>一般现在本地写好文章，运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo s</div></pre></td></tr></table></figure>\n<p>本地查看一下，如果可以，可以直接部署到git上面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo d</div></pre></td></tr></table></figure>\n<h2 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h2><p>这时候你输入自己的xxx.github.io即可查看自己的博客了。</p>\n"},{"title":"炫酷终端","date":"2017-08-03T07:14:41.000Z","_content":"\n此文讲解的是通过[oh_my_zsh](http://ohmyz.sh/)来打造个性界面。\n建议Mac系统使用[Iterm2](https://www.iterm2.com/) + [oh_my_zsh](http://ohmyz.sh/)进行打造炫酷终端。\n\n## Installation 安装\n\n根据需求进行如下操作，如在终端中可以直接输入\n\n```\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n即可安装。\n\nvia curl\n\n```\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n\nvia wget\n\n```\nsh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"\n```\n\n\n安装完成后，在用户目录有个隐藏文件夹`.oh-my-zsh`可以使用命令行查看\n\n```\ncd ~/.oh-my-zsh\n```\n\n## Updates 升级\n\n默认情况下，系统会每隔几周检测升级，发现更新后提示用户进行更新。当然我们也可以关闭提示自动升级，还可以直接关闭自动升级功能。\n\n* 开关提示升级\n`DISABLE_UPDATE_PROMPT = true`\n* 开关自动升级\n`DISABLE_AUTO_UPDATE = true`\n\n对`~/.zshrc`进行编辑。建议使用vi或者vim进行编辑更改。\n\n手动升级\n在终端中输入`upgrade_oh_my_zsh`\n\n## Edit Themes 更换主题\n\n所有主题都在`~/.oh-my-zsh/themes`目录中，想要预览可以看[官网地址](https://github.com/robbyrussell/oh-my-zsh/wiki/Themes)\n\n更换主题以及操作升级开关，都是在`~/.zshrc`中进行编辑。\n\n使用vi或者vim对`~/.zshrc`进行编辑 `ZSH_THEME=\"robbyrussell\"`等于号后面写上你要替换的主题名称即可。例如`ZSH_THEME=\"af-magic\"`。\n\n## Uninstall 卸载\n\n卸载oh_my_zsh只需要运行`uninstall_oh_my_zsh`即可。\n\n","source":"_posts/CoolShell.md","raw":"---\ntitle: 炫酷终端\ntags: [Shell]\ncategories: [Tools]\ndate: 2017-08-03 15:14:41\n---\n\n此文讲解的是通过[oh_my_zsh](http://ohmyz.sh/)来打造个性界面。\n建议Mac系统使用[Iterm2](https://www.iterm2.com/) + [oh_my_zsh](http://ohmyz.sh/)进行打造炫酷终端。\n\n## Installation 安装\n\n根据需求进行如下操作，如在终端中可以直接输入\n\n```\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n即可安装。\n\nvia curl\n\n```\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n```\n\nvia wget\n\n```\nsh -c \"$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"\n```\n\n\n安装完成后，在用户目录有个隐藏文件夹`.oh-my-zsh`可以使用命令行查看\n\n```\ncd ~/.oh-my-zsh\n```\n\n## Updates 升级\n\n默认情况下，系统会每隔几周检测升级，发现更新后提示用户进行更新。当然我们也可以关闭提示自动升级，还可以直接关闭自动升级功能。\n\n* 开关提示升级\n`DISABLE_UPDATE_PROMPT = true`\n* 开关自动升级\n`DISABLE_AUTO_UPDATE = true`\n\n对`~/.zshrc`进行编辑。建议使用vi或者vim进行编辑更改。\n\n手动升级\n在终端中输入`upgrade_oh_my_zsh`\n\n## Edit Themes 更换主题\n\n所有主题都在`~/.oh-my-zsh/themes`目录中，想要预览可以看[官网地址](https://github.com/robbyrussell/oh-my-zsh/wiki/Themes)\n\n更换主题以及操作升级开关，都是在`~/.zshrc`中进行编辑。\n\n使用vi或者vim对`~/.zshrc`进行编辑 `ZSH_THEME=\"robbyrussell\"`等于号后面写上你要替换的主题名称即可。例如`ZSH_THEME=\"af-magic\"`。\n\n## Uninstall 卸载\n\n卸载oh_my_zsh只需要运行`uninstall_oh_my_zsh`即可。\n\n","slug":"CoolShell","published":1,"updated":"2017-08-06T03:08:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6283ply0001otaisomrrrsv","content":"<p>此文讲解的是通过<a href=\"http://ohmyz.sh/\" target=\"_blank\" rel=\"external\">oh_my_zsh</a>来打造个性界面。<br>建议Mac系统使用<a href=\"https://www.iterm2.com/\" target=\"_blank\" rel=\"external\">Iterm2</a> + <a href=\"http://ohmyz.sh/\" target=\"_blank\" rel=\"external\">oh_my_zsh</a>进行打造炫酷终端。</p>\n<h2 id=\"Installation-安装\"><a href=\"#Installation-安装\" class=\"headerlink\" title=\"Installation 安装\"></a>Installation 安装</h2><p>根据需求进行如下操作，如在终端中可以直接输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure>\n<p>即可安装。</p>\n<p>via curl</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure>\n<p>via wget</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sh -c &quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;</div></pre></td></tr></table></figure>\n<p>安装完成后，在用户目录有个隐藏文件夹<code>.oh-my-zsh</code>可以使用命令行查看</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/.oh-my-zsh</div></pre></td></tr></table></figure>\n<h2 id=\"Updates-升级\"><a href=\"#Updates-升级\" class=\"headerlink\" title=\"Updates 升级\"></a>Updates 升级</h2><p>默认情况下，系统会每隔几周检测升级，发现更新后提示用户进行更新。当然我们也可以关闭提示自动升级，还可以直接关闭自动升级功能。</p>\n<ul>\n<li>开关提示升级<br><code>DISABLE_UPDATE_PROMPT = true</code></li>\n<li>开关自动升级<br><code>DISABLE_AUTO_UPDATE = true</code></li>\n</ul>\n<p>对<code>~/.zshrc</code>进行编辑。建议使用vi或者vim进行编辑更改。</p>\n<p>手动升级<br>在终端中输入<code>upgrade_oh_my_zsh</code></p>\n<h2 id=\"Edit-Themes-更换主题\"><a href=\"#Edit-Themes-更换主题\" class=\"headerlink\" title=\"Edit Themes 更换主题\"></a>Edit Themes 更换主题</h2><p>所有主题都在<code>~/.oh-my-zsh/themes</code>目录中，想要预览可以看<a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\" target=\"_blank\" rel=\"external\">官网地址</a></p>\n<p>更换主题以及操作升级开关，都是在<code>~/.zshrc</code>中进行编辑。</p>\n<p>使用vi或者vim对<code>~/.zshrc</code>进行编辑 <code>ZSH_THEME=&quot;robbyrussell&quot;</code>等于号后面写上你要替换的主题名称即可。例如<code>ZSH_THEME=&quot;af-magic&quot;</code>。</p>\n<h2 id=\"Uninstall-卸载\"><a href=\"#Uninstall-卸载\" class=\"headerlink\" title=\"Uninstall 卸载\"></a>Uninstall 卸载</h2><p>卸载oh_my_zsh只需要运行<code>uninstall_oh_my_zsh</code>即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>此文讲解的是通过<a href=\"http://ohmyz.sh/\" target=\"_blank\" rel=\"external\">oh_my_zsh</a>来打造个性界面。<br>建议Mac系统使用<a href=\"https://www.iterm2.com/\" target=\"_blank\" rel=\"external\">Iterm2</a> + <a href=\"http://ohmyz.sh/\" target=\"_blank\" rel=\"external\">oh_my_zsh</a>进行打造炫酷终端。</p>\n<h2 id=\"Installation-安装\"><a href=\"#Installation-安装\" class=\"headerlink\" title=\"Installation 安装\"></a>Installation 安装</h2><p>根据需求进行如下操作，如在终端中可以直接输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure>\n<p>即可安装。</p>\n<p>via curl</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure>\n<p>via wget</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sh -c &quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;</div></pre></td></tr></table></figure>\n<p>安装完成后，在用户目录有个隐藏文件夹<code>.oh-my-zsh</code>可以使用命令行查看</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/.oh-my-zsh</div></pre></td></tr></table></figure>\n<h2 id=\"Updates-升级\"><a href=\"#Updates-升级\" class=\"headerlink\" title=\"Updates 升级\"></a>Updates 升级</h2><p>默认情况下，系统会每隔几周检测升级，发现更新后提示用户进行更新。当然我们也可以关闭提示自动升级，还可以直接关闭自动升级功能。</p>\n<ul>\n<li>开关提示升级<br><code>DISABLE_UPDATE_PROMPT = true</code></li>\n<li>开关自动升级<br><code>DISABLE_AUTO_UPDATE = true</code></li>\n</ul>\n<p>对<code>~/.zshrc</code>进行编辑。建议使用vi或者vim进行编辑更改。</p>\n<p>手动升级<br>在终端中输入<code>upgrade_oh_my_zsh</code></p>\n<h2 id=\"Edit-Themes-更换主题\"><a href=\"#Edit-Themes-更换主题\" class=\"headerlink\" title=\"Edit Themes 更换主题\"></a>Edit Themes 更换主题</h2><p>所有主题都在<code>~/.oh-my-zsh/themes</code>目录中，想要预览可以看<a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Themes\" target=\"_blank\" rel=\"external\">官网地址</a></p>\n<p>更换主题以及操作升级开关，都是在<code>~/.zshrc</code>中进行编辑。</p>\n<p>使用vi或者vim对<code>~/.zshrc</code>进行编辑 <code>ZSH_THEME=&quot;robbyrussell&quot;</code>等于号后面写上你要替换的主题名称即可。例如<code>ZSH_THEME=&quot;af-magic&quot;</code>。</p>\n<h2 id=\"Uninstall-卸载\"><a href=\"#Uninstall-卸载\" class=\"headerlink\" title=\"Uninstall 卸载\"></a>Uninstall 卸载</h2><p>卸载oh_my_zsh只需要运行<code>uninstall_oh_my_zsh</code>即可。</p>\n"},{"title":"Gradle Wrapper 常用方法讲解","date":"2017-08-06T06:44:13.000Z","_content":"\nGradle是一个基于Groovy强大的构建系统，此文讲解的是Android Studio所使用的一些常用命令。至于以后慢慢学习在讲解一些Gradle基础知识。\n\n\n## 常用命令\n\n以下命令都是在Mac系统下的常用命令。\n\n```\n./gradlew -v \t\t# 版本号\n./gradlew clean\t\t# 清理项目build文件夹\n./gradlew build\t\t# 检查依赖并编译打包,同时把debug、release环境的包都打出来。与上文build相对应，一个是清理，一个是生成。\n./gradlew assembleDebug\t\t# 编译并打Debug包\n./gradlew assembleXxxRelease\t\t# 编译并打Release的包\n```\n\n这里面在讲解一下`assemble`的其他使用方法。\n\n```\n./gradlew assembleXxxRelease\t# 生成Xxx渠道的Release版本包\n./gradlew assembleXxx\t# 生成Xxx渠道的Release和Debug版本包\n./gradlew assembleRelease\t# 生成全部渠道的Release版本包。\n```\n\nXxx为渠道名称写法如下：\n\n```\nandroid{\n...\n   productFlavors {\n        tencent{\n        ...\n        ...\n        }\n        ...\n   }\n...\n}\n```\n\n完整版本如下：\n\n```\n// 友盟多渠道打包\nproductFlavors {\n    tencent {}\n    wandoujia {}\n    host {}\n}\n\nproductFlavors.all { flavor ->\n    flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]\n}  \n```\n\n```\n// AndroidManifest.xml清单中如下\n\n<meta-data\n    android:name=\"UMENG_CHANNEL\"\n    android:value=\"${UMENG_CHANNEL_VALUE}\" />\n```\n\n\n\n\n","source":"_posts/Gradlew.md","raw":"---\ntitle: Gradle Wrapper 常用方法讲解\ndate: 2017-08-06 14:44:13\ntags: [Android]\ncategories: [Android]\n---\n\nGradle是一个基于Groovy强大的构建系统，此文讲解的是Android Studio所使用的一些常用命令。至于以后慢慢学习在讲解一些Gradle基础知识。\n\n\n## 常用命令\n\n以下命令都是在Mac系统下的常用命令。\n\n```\n./gradlew -v \t\t# 版本号\n./gradlew clean\t\t# 清理项目build文件夹\n./gradlew build\t\t# 检查依赖并编译打包,同时把debug、release环境的包都打出来。与上文build相对应，一个是清理，一个是生成。\n./gradlew assembleDebug\t\t# 编译并打Debug包\n./gradlew assembleXxxRelease\t\t# 编译并打Release的包\n```\n\n这里面在讲解一下`assemble`的其他使用方法。\n\n```\n./gradlew assembleXxxRelease\t# 生成Xxx渠道的Release版本包\n./gradlew assembleXxx\t# 生成Xxx渠道的Release和Debug版本包\n./gradlew assembleRelease\t# 生成全部渠道的Release版本包。\n```\n\nXxx为渠道名称写法如下：\n\n```\nandroid{\n...\n   productFlavors {\n        tencent{\n        ...\n        ...\n        }\n        ...\n   }\n...\n}\n```\n\n完整版本如下：\n\n```\n// 友盟多渠道打包\nproductFlavors {\n    tencent {}\n    wandoujia {}\n    host {}\n}\n\nproductFlavors.all { flavor ->\n    flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]\n}  \n```\n\n```\n// AndroidManifest.xml清单中如下\n\n<meta-data\n    android:name=\"UMENG_CHANNEL\"\n    android:value=\"${UMENG_CHANNEL_VALUE}\" />\n```\n\n\n\n\n","slug":"Gradlew","published":1,"updated":"2017-08-07T13:51:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj6283pm20003otaizhjrfhzw","content":"<p>Gradle是一个基于Groovy强大的构建系统，此文讲解的是Android Studio所使用的一些常用命令。至于以后慢慢学习在讲解一些Gradle基础知识。</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>以下命令都是在Mac系统下的常用命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">./gradlew -v \t\t# 版本号</div><div class=\"line\">./gradlew clean\t\t# 清理项目build文件夹</div><div class=\"line\">./gradlew build\t\t# 检查依赖并编译打包,同时把debug、release环境的包都打出来。与上文build相对应，一个是清理，一个是生成。</div><div class=\"line\">./gradlew assembleDebug\t\t# 编译并打Debug包</div><div class=\"line\">./gradlew assembleXxxRelease\t\t# 编译并打Release的包</div></pre></td></tr></table></figure>\n<p>这里面在讲解一下<code>assemble</code>的其他使用方法。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">./gradlew assembleXxxRelease\t# 生成Xxx渠道的Release版本包</div><div class=\"line\">./gradlew assembleXxx\t# 生成Xxx渠道的Release和Debug版本包</div><div class=\"line\">./gradlew assembleRelease\t# 生成全部渠道的Release版本包。</div></pre></td></tr></table></figure>\n<p>Xxx为渠道名称写法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">android&#123;</div><div class=\"line\">...</div><div class=\"line\">   productFlavors &#123;</div><div class=\"line\">        tencent&#123;</div><div class=\"line\">        ...</div><div class=\"line\">        ...</div><div class=\"line\">        &#125;</div><div class=\"line\">        ...</div><div class=\"line\">   &#125;</div><div class=\"line\">...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>完整版本如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 友盟多渠道打包</div><div class=\"line\">productFlavors &#123;</div><div class=\"line\">    tencent &#123;&#125;</div><div class=\"line\">    wandoujia &#123;&#125;</div><div class=\"line\">    host &#123;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">productFlavors.all &#123; flavor -&gt;</div><div class=\"line\">    flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// AndroidManifest.xml清单中如下</div><div class=\"line\"></div><div class=\"line\">&lt;meta-data</div><div class=\"line\">    android:name=&quot;UMENG_CHANNEL&quot;</div><div class=\"line\">    android:value=&quot;$&#123;UMENG_CHANNEL_VALUE&#125;&quot; /&gt;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>Gradle是一个基于Groovy强大的构建系统，此文讲解的是Android Studio所使用的一些常用命令。至于以后慢慢学习在讲解一些Gradle基础知识。</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>以下命令都是在Mac系统下的常用命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">./gradlew -v \t\t# 版本号</div><div class=\"line\">./gradlew clean\t\t# 清理项目build文件夹</div><div class=\"line\">./gradlew build\t\t# 检查依赖并编译打包,同时把debug、release环境的包都打出来。与上文build相对应，一个是清理，一个是生成。</div><div class=\"line\">./gradlew assembleDebug\t\t# 编译并打Debug包</div><div class=\"line\">./gradlew assembleXxxRelease\t\t# 编译并打Release的包</div></pre></td></tr></table></figure>\n<p>这里面在讲解一下<code>assemble</code>的其他使用方法。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">./gradlew assembleXxxRelease\t# 生成Xxx渠道的Release版本包</div><div class=\"line\">./gradlew assembleXxx\t# 生成Xxx渠道的Release和Debug版本包</div><div class=\"line\">./gradlew assembleRelease\t# 生成全部渠道的Release版本包。</div></pre></td></tr></table></figure>\n<p>Xxx为渠道名称写法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">android&#123;</div><div class=\"line\">...</div><div class=\"line\">   productFlavors &#123;</div><div class=\"line\">        tencent&#123;</div><div class=\"line\">        ...</div><div class=\"line\">        ...</div><div class=\"line\">        &#125;</div><div class=\"line\">        ...</div><div class=\"line\">   &#125;</div><div class=\"line\">...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>完整版本如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 友盟多渠道打包</div><div class=\"line\">productFlavors &#123;</div><div class=\"line\">    tencent &#123;&#125;</div><div class=\"line\">    wandoujia &#123;&#125;</div><div class=\"line\">    host &#123;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">productFlavors.all &#123; flavor -&gt;</div><div class=\"line\">    flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// AndroidManifest.xml清单中如下</div><div class=\"line\"></div><div class=\"line\">&lt;meta-data</div><div class=\"line\">    android:name=&quot;UMENG_CHANNEL&quot;</div><div class=\"line\">    android:value=&quot;$&#123;UMENG_CHANNEL_VALUE&#125;&quot; /&gt;</div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj6283ply0001otaisomrrrsv","category_id":"cj6283pm50004otaie5h8mzcm","_id":"cj6283pma0009otait434p1zu"},{"post_id":"cj6283pm20003otaizhjrfhzw","category_id":"cj6283pm90007otaithyd1jcq","_id":"cj6283pmb000botaint4brqay"}],"PostTag":[{"post_id":"cj6283plu0000otaikrlfrz6e","tag_id":"cj6283pm00002otaiqd11rhln","_id":"cj6283pm60006otai1yu3iihl"},{"post_id":"cj6283ply0001otaisomrrrsv","tag_id":"cj6283pm60005otaizzgme96n","_id":"cj6283pmb000aotaifepu3g5l"},{"post_id":"cj6283pm20003otaizhjrfhzw","tag_id":"cj6283pma0008otaihl0jay3s","_id":"cj6283pmb000cotaifi0n8nzu"}],"Tag":[{"name":"Hexo","_id":"cj6283pm00002otaiqd11rhln"},{"name":"Shell","_id":"cj6283pm60005otaizzgme96n"},{"name":"Android","_id":"cj6283pma0008otaihl0jay3s"}]}}